def knapSack(W, wt, val, n):
    # Base case
    if n == 0 or W == 0:
       return 0
    # If weight is higher than capacity, item cannot be included
    if wt[n-1] > W:
       return knapSack(W, wt, val, n-1)
    # Return the maximum value that can be obtained by either including or excluding the current item
    else:
       return max(val[n-1] + knapSack(W-wt[n-1], wt, val, n-1),
                  knapSack(W, wt, val, n-1))

# Test the function
val = [60, 100, 120]
wt = [10, 20, 30]
W = 50
n = len(val)
print(knapSack(W, wt, val, n))
